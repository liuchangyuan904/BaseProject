package com.common.project.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.common.project.entity.BuildingEntity;
import com.common.project.entity.ArcCell;

import com.common.project.dao.BuildingEntityDao;
import com.common.project.dao.ArcCellDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig buildingEntityDaoConfig;
    private final DaoConfig arcCellDaoConfig;

    private final BuildingEntityDao buildingEntityDao;
    private final ArcCellDao arcCellDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        buildingEntityDaoConfig = daoConfigMap.get(BuildingEntityDao.class).clone();
        buildingEntityDaoConfig.initIdentityScope(type);

        arcCellDaoConfig = daoConfigMap.get(ArcCellDao.class).clone();
        arcCellDaoConfig.initIdentityScope(type);

        buildingEntityDao = new BuildingEntityDao(buildingEntityDaoConfig, this);
        arcCellDao = new ArcCellDao(arcCellDaoConfig, this);

        registerDao(BuildingEntity.class, buildingEntityDao);
        registerDao(ArcCell.class, arcCellDao);
    }
    
    public void clear() {
        buildingEntityDaoConfig.clearIdentityScope();
        arcCellDaoConfig.clearIdentityScope();
    }

    public BuildingEntityDao getBuildingEntityDao() {
        return buildingEntityDao;
    }

    public ArcCellDao getArcCellDao() {
        return arcCellDao;
    }

}
