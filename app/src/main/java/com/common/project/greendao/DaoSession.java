package com.common.project.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.common.project.entity.NewWordEntity;
import com.common.project.entity.UnKnownWordEntity;
import com.common.project.entity.DayStudyEntity;

import com.common.project.greendao.NewWordEntityDao;
import com.common.project.greendao.UnKnownWordEntityDao;
import com.common.project.greendao.DayStudyEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig newWordEntityDaoConfig;
    private final DaoConfig unKnownWordEntityDaoConfig;
    private final DaoConfig dayStudyEntityDaoConfig;

    private final NewWordEntityDao newWordEntityDao;
    private final UnKnownWordEntityDao unKnownWordEntityDao;
    private final DayStudyEntityDao dayStudyEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        newWordEntityDaoConfig = daoConfigMap.get(NewWordEntityDao.class).clone();
        newWordEntityDaoConfig.initIdentityScope(type);

        unKnownWordEntityDaoConfig = daoConfigMap.get(UnKnownWordEntityDao.class).clone();
        unKnownWordEntityDaoConfig.initIdentityScope(type);

        dayStudyEntityDaoConfig = daoConfigMap.get(DayStudyEntityDao.class).clone();
        dayStudyEntityDaoConfig.initIdentityScope(type);

        newWordEntityDao = new NewWordEntityDao(newWordEntityDaoConfig, this);
        unKnownWordEntityDao = new UnKnownWordEntityDao(unKnownWordEntityDaoConfig, this);
        dayStudyEntityDao = new DayStudyEntityDao(dayStudyEntityDaoConfig, this);

        registerDao(NewWordEntity.class, newWordEntityDao);
        registerDao(UnKnownWordEntity.class, unKnownWordEntityDao);
        registerDao(DayStudyEntity.class, dayStudyEntityDao);
    }
    
    public void clear() {
        newWordEntityDaoConfig.clearIdentityScope();
        unKnownWordEntityDaoConfig.clearIdentityScope();
        dayStudyEntityDaoConfig.clearIdentityScope();
    }

    public NewWordEntityDao getNewWordEntityDao() {
        return newWordEntityDao;
    }

    public UnKnownWordEntityDao getUnKnownWordEntityDao() {
        return unKnownWordEntityDao;
    }

    public DayStudyEntityDao getDayStudyEntityDao() {
        return dayStudyEntityDao;
    }

}
